## @file
# Component declaration file for the oem sample package.
#
#  Copyright (C) Microsoft Corporation. All rights reserved.
#  SPDX-License-Identifier: BSD-2-Clause-Patent
#
##

[Defines]
  DEC_SPECIFICATION   = 0x00010005
  PACKAGE_NAME        = OemPkg
  PACKAGE_GUID        = 1CF89F9A-7C15-4702-A4D9-933B6C49D9AF
  PACKAGE_VERSION     = 0.1

[Includes]
  Include

[LibraryClasses]
  ## @libraryclass Provides the password rules and hashing
  #
  PasswordPolicyLib|Include/Library/PasswordPolicyLib.h

  ## @libraryclass Provides the abstracted MFCI policy query function
  #
  OemMfciLib|Include/Library/OemMfciLib.h

  ## @libraryclass Provides the abstracted MFCI policy query and notification registration function
  #
  OemMfciDxeLib|Include/Library/OemMfciDxeLib.h

[Guids]
  # {B20F1063-8C75-4A83-BFE0-969EFB5AF0AA}
  gOemPkgTokenSpaceGuid = { 0xB20F1063, 0x8C75, 0x4A83, { 0xBF, 0xE0, 0x96, 0x9E, 0xFB, 0x5A, 0xF0, 0xAA } }

  #
  # Guid for Alt Boot tracking variables namespace
  #
  gAltBootGuid = {0x26D75FF0, 0xD5CD, 0x49EC, {0x80, 0x92, 0xF8, 0xEC, 0x4D, 0x18, 0xEF, 0x33}}

  #
  # Guid for FrontPage NV variable
  # 9B09B8C1-3CC0-4F3B-A6CB-A0214B7F4C63
  gOemBootNVVarGuid = { 0x9b09b8c1, 0x3cc0, 0x4f3b, { 0xa6, 0xcb, 0xa0, 0x21, 0x4b, 0x7f, 0x4c, 0x63 } }

  gFrontPageResetGuid = {0xa6fa93d3, 0x9e09, 0x4192, {0x84, 0x79, 0xf0, 0x81, 0x29, 0x6f, 0x74, 0xde}}

  # Include/Guid/PasswordStoreVariable.h
  gOemPkgPasswordStoreVarGuid =  {0xa2ee0f0b, 0xac46, 0x436e, {0xaf, 0xe6, 0x40, 0x60, 0xee, 0x63, 0xd6, 0xa2} }

  # Oem Config Policy Guid
  gOemConfigPolicyGuid = { 0xba320ade, 0xe132, 0x4c99, { 0xa3, 0xdf, 0x74, 0xd6, 0x73, 0xea, 0x6f, 0x76 } }

[Protocols]
  gMsButtonServicesProtocolGuid     = { 0xe0084c50, 0x3efd, 0x43f7, { 0x88, 0xdf, 0x19, 0x4d, 0xf2, 0xd1, 0x60, 0xf0 }}

  gMsFrontPageAuthTokenProtocolGuid = { 0xed285037, 0x228b, 0x4d48, { 0xad, 0xa0, 0x8b, 0x1, 0x8a, 0xcf, 0xef, 0xb1 }}

[PcdsFixedAtBuild]
  gOemPkgTokenSpaceGuid.PcdUefiVersionNumber        |00000000|UINT32|0x00000001
  gOemPkgTokenSpaceGuid.PcdUefiBuildDate            |00000000|UINT32|0x00000002

  ##
  # POST background color (default: black).
  #
  gOemPkgTokenSpaceGuid.PcdPostBackgroundColor|0x0|UINT32|0x00000003

  ## FFS filename to find the default BMP Logo file.
  # @Prompt FFS Name of Boot Logo File
  gOemPkgTokenSpaceGuid.PcdLogoFile |{ 0x99, 0x8b, 0xB2, 0x7B, 0xBB, 0x61, 0xD5, 0x11, 0x9A, 0x5D, 0x00, 0x90, 0x27, 0x3F, 0xC1, 0x4D }|VOID*|0x00000004

  ## FFS filename to find the Too Hot BMP file.
  #  {7C3A8851-A6D2-445B-A53B-155F867AB4DA}
  gOemPkgTokenSpaceGuid.PcdThermalFile |{ 0x51, 0x88, 0x3A, 0x7C, 0xD2, 0xA6, 0x5B, 0x44, 0xA5, 0x3B, 0x15, 0x5F, 0x86, 0x7A, 0xB4, 0xDA }|VOID*|0x00000005

  ## FFS filename to find the Low Battery BMP file.
  #  {D2AF039E-9F1F-4616-97AF-BE4509A365EA}
  gOemPkgTokenSpaceGuid.PcdLowBatteryFile |{ 0x9E, 0x03, 0xAF, 0xD2, 0x1F, 0x9F, 0x16, 0x46, 0x97, 0xAF, 0xBE, 0x45, 0x09, 0xA3, 0x65, 0xEA }|VOID*|0x00000006

  ## FFS filename to find the Front Page Title Bar BMP file.
  # {afdaeab5-3f81-934e-8ee3-228434ba283d}
  gOemPkgTokenSpaceGuid.PcdFrontPageLogoFile         |{ 0xb5, 0xea, 0xda, 0xaf, 0x81, 0x3f, 0x93, 0x4e, 0x8e, 0xe3, 0x22, 0x84, 0x34, 0xba, 0x28, 0x3d } | VOID* | 0x00000007

  ## FFS filename to find the No Boot BMP file.
  # {f1e7a352-46ae-4912-af92-36ab51781d8e}
  gOemPkgTokenSpaceGuid.PcdBootFailIndicatorFile |{ 0x52, 0xa3, 0xe7, 0xf1, 0xae, 0x46, 0x12, 0x49, 0x92, 0xaf, 0x36, 0xab, 0x51, 0x78, 0x1d, 0x8e }|VOID*|0x00000008

  ## FFS filename to find the Firmware Settings BMP file.
  # {4f7fe6d5-b396-40f9-9246-7a8e4a821720 }
  gOemPkgTokenSpaceGuid.PcdFirmwareSettingsIndicatorFile | { 0xd5, 0xe6, 0xfe, 0x4f, 0x96, 0xb3, 0xf9, 0x40, 0x92, 0x46, 0x7a, 0x8e, 0x4a, 0x82, 0x17, 0x20 }|VOID*|0x00000009

  ## FFS filename to find the Volume Up BMP file.
  # {ae2d011c-4128-4960-a536-b424ccc3d1ea}
  gOemPkgTokenSpaceGuid.PcdVolumeUpIndicatorFile |{ 0x1c, 0x01, 0x2d, 0xae, 0x28, 0x41, 0x60, 0x49, 0xa5, 0x36, 0xb4, 0x24, 0xcc, 0xc3, 0xd1, 0xea }|VOID*|0x0000000A

  # The number of attempts the user has to type in the password.
  # If the number of attempts is exceeded, a message dialog is displayed, and
  # then user can access the front page as a limited user.
  # If set to 0 gives an unlimited number of attempts.
  gOemPkgTokenSpaceGuid.PcdMaxPasswordAttempts|0x3|UINT8|0x0000000B

  ## Pcd for ActiveProfileIndexSelectorPcdLib to query ActiveProfileIndex from
  # MAX_UINT32 indicates the default profile
  gOemPkgTokenSpaceGuid.PcdActiveProfileIndex|0xffffffff|UINT32|0x0000000C
